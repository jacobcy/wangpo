<!DOCTYPE html>
<html>

<head>

    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="">

    <title>王婆速配</title>

    <!-- Bootstrap Core CSS -->
    <link href="css/bootstrap.min.css" rel="stylesheet">

    <!-- Custom CSS -->
    <link href="css/sb-admin.css" rel="stylesheet">

    <!-- Custom Fonts -->
    <link href="font-awesome/css/font-awesome.min.css" rel="stylesheet" type="text/css">

    <!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->
    <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
    <!--[if lt IE 9]>
        <script src="https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js"></script>
        <script src="https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js"></script>
    <![endif]-->

    <!--
        Stylesheets and Preprocessors
        ==============================

        You can always bring in CSS files manually with `<link>` tags, or asynchronously
        using a solution like AMD (RequireJS).  Or, if you like, you can take advantage
        of Sails' conventional asset pipeline (boilerplate Gruntfile).

        By default, stylesheets from your `assets/styles` folder are included
        here automatically (between STYLES and STYLES END). Both CSS (.css) and LESS (.less)
        are supported. In production, your styles will be minified and concatenated into
        a single file.

        To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
        For example, here are a few things you could do:

            + Change the order of your CSS files
            + Import stylesheets from other directories
            + Use a different or additional preprocessor, like SASS, SCSS or Stylus
    -->

    <!--STYLES-->
    <link rel="stylesheet" href="/styles/importer.css">
    <!--STYLES END-->

    <!--SCRIPTS-->
    <script src="js/dependencies/sails.io.js"></script>
    <script src="js/dependencies/jquery.js"></script>
    <script src="js/bootstrap.min.js"></script>
    <script src="js/angular.js"></script>
    <script src="js/angular.min.js"></script>
    <script src="js/angular/app.js"></script>
    <script src="js/angular/controllers/about.js"></script>
    <script src="js/angular/controllers/main.js"></script>
    <script src="js/angular/controllers/msg.js"></script>
    <script src="js/angular/controllers/post.js"></script>
    <script src="js/angular/controllers/user.js"></script>
    <script src="js/angular/controllers/usercreation.js"></script>
    <script src="js/angular/controllers/userdetail.js"></script>
    <script src="js/angular/services/msglist.js"></script>
    <script src="js/angular/services/userfactory.js"></script>
    <script src="js/angular/services/userlist.js"></script>
    <script src="js/bootstrap-paginator.min.js"></script>
    <script src="js/weibouser/main.js"></script>
    <!--SCRIPTS END-->
</head>

<body>

    <div id="wrapper">

        <!-- Navigation -->
        <nav class="navbar navbar-inverse navbar-fixed-top" role="navigation">
            <!-- Brand and toggle get grouped for better mobile display -->
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-ex1-collapse">
                    <span class="sr-only">Toggle navigation</span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                <a class="navbar-brand" href="index.html">王婆速配</a>
            </div>
            <!-- Top Menu Items -->
            <ul class="nav navbar-right top-nav">
                <li class="dropdown">
                    <a href="#" class="dropdown-toggle" data-toggle="dropdown"><i class="fa fa-user"></i> <%= user.username %> <b class="caret"></b></a>
                    <ul class="dropdown-menu">
                        <li>
                            <a href="#"><i class="fa fa-fw fa-user"></i> 账户设置</a>
                        </li>
                        <li class="divider"></li>
                        <li>
                            <a href="logout"><i class="fa fa-fw fa-power-off"></i> 退出</a>
                        </li>
                    </ul>
                </li>
            </ul>
            <!-- Sidebar Menu Items - These collapse to the responsive navigation menu on small screens -->
            <div class="collapse navbar-collapse navbar-ex1-collapse">
                <ul class="nav navbar-nav side-nav">
                    <li>
                        <a href="index.html"><i class="fa fa-fw fa-dashboard"></i> 消息管理</a>
                    </li>
                    <li>
                        <a href="angular.html"><i class="fa fa-fw fa-table"></i> Angular</a>
                    </li>
                    <li>
                        <a href="weibouser.html"><i class="fa fa-fw fa-table"></i> 用户管理</a>
                    </li>
                    <li>
                        <a href="blank-page.html"><i class="fa fa-fw fa-file"></i> 微博管理</a>
                    </li>
                    <li>
                        <a href="bootstrap-elements.html"><i class="fa fa-fw fa-desktop"></i> Bootstrap Elements</a>
                    </li>
                </ul>
                <script>
                    // Set the active side-nav element with js.
                    var name = location.pathname;
                    name = name.substr(name.lastIndexOf('/') + 1);
                    $(".side-nav a[href='" + name + "']").parent().addClass("active");
                </script>
            </div>
            <!-- /.navbar-collapse -->
        </nav>

        <div id="page-wrapper">

            <div class="container-fluid">

              <%- body %>

              <!--
                  Client-side Templates
                  ========================

                  HTML templates are important prerequisites of modern, rich client applications.
                  To work their magic, frameworks like Backbone, Angular, Ember, and Knockout require
                  that you load these templates client-side.

                  By default, your Gruntfile is configured to automatically load and precompile
                  client-side JST templates in your `assets/templates` folder, then
                  include them here automatically (between TEMPLATES and TEMPLATES END).

                  To customize this behavior to fit your needs, just edit `tasks/pipeline.js`.
                  For example, here are a few things you could do:

                      + Import templates from other directories
                      + Use a different template engine (handlebars, jade, dust, etc.)
                      + Internationalize your client-side templates using a server-side
                        stringfile before they're served.
              -->

              <!--TEMPLATES-->
              
              <!--TEMPLATES END-->

            </div>
            <!-- /.container-fluid -->

        </div>
        <!-- /#page-wrapper -->

    </div>
    <!-- /#wrapper -->

    <!--

      Client-side Javascript
      ========================

      You can always bring in JS files manually with `script` tags, or asynchronously
      on the client using a solution like AMD (RequireJS).  Or, if you like, you can 
      take advantage of Sails' conventional asset pipeline (boilerplate Gruntfile).

      By default, files in your `assets/js` folder are included here
      automatically (between SCRIPTS and SCRIPTS END).  Both JavaScript (.js) and
      CoffeeScript (.coffee) are supported. In production, your scripts will be minified
      and concatenated into a single file.
      
      To customize any part of the built-in behavior, just edit `tasks/pipeline.js`.
      For example, here are a few things you could do:
          
          + Change the order of your scripts
          + Import scripts from other directories
          + Use a different preprocessor, like TypeScript

    -->
</body>

</html>
